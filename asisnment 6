#Design a function that takes the ordered items, quantities, and prices to calculate 
#the total bill amount.
#Include options for applying discounts, taxes, and splitting the bill among friends.

def calculate_total_amount(quantities, prices,applying_discount, taxes, splitting_bill):

    if applying_discount:
        prices *= 0.9
    else:
        print("no discount")

    if splitting_bill:
        prices /= 2
    return prices*quantities+taxes

        

taxes = 0.01
quantities = int(input("Enter Quantities? "))
prices = int(input("Enter the Prices? "))
applying_discount = (input("want to apply Discounts Yes/No? ")) == 'yes'
splitting_bill = input("split the bill Yes/No? ") == "yes"
total_bill = calculate_total_amount(quantities, prices, applying_discount, taxes, splitting_bill )
if splitting_bill == True:
    print("Your Total Bill per person is " ,{total_bill})
else:
    print("Your Total Bill is " ,{total_bill})


#2 Build a function that estimates the travel cost for a chosen destination, 
#considering transportation, accommodation, and activities.
# 2. Include options for different travel styles (budget, luxury) and durations


def travel_cost(transportation_cost, accommodation_cost, activities_cost, duration):
   
    total_cost = (transportation_cost + accommodation_cost + activities_cost)

    total_cost *= duration

    return total_cost

transportation_cost = int(input("Enter transportation cost: $"))
accommodation_cost = int(input("Enter accommodation cost: $"))
activities_cost = int(input("Enter activities cost: $"))
travel_style = input("Enter travel style (budget/luxury)") == "luxury"
duration = int(input("Enter travel duration in days: "))

total_cost = travel_cost(transportation_cost, accommodation_cost, activities_cost, duration)

if travel_style == False:
    print("Your Estimated Travel Cost of Budget Is $", total_cost)
else:
    print("Your Estimated Travel Cost of Luxury Is $", total_cost)
#3Develop a function that analyzes a social media post and returns the sentiment (positive, negative, 
# neutral) and keywords used.
# Expand the function to identify emojis and potential trends

import nltk
from nltk.sentiment import SentimentIntensityAnalyzer
import emojis

nltk.download('vader_lexicon')

def analyze_social_media_post(post_text):
    # Sentiment Analysis
    sid = SentimentIntensityAnalyzer()
    sentiment_score = sid.polarity_scores(post_text)['compound']

    if sentiment_score >= 0.05:
        sentiment = "Positive"
    elif sentiment_score <= -0.05:
        sentiment = "Negative"
    else:
        sentiment = "Neutral"

    # Keyword extraction
    words = nltk.word_tokenize(post_text)
    keywords = [word.lower() for word in words if word.isalnum()]

    # Emoji extraction
    emojis_list = [char for char in post_text if char in ["😄","😐","😞"]]

    return {
        "Sentiment": sentiment,
        "Keywords": keywords,
        "Emojis": emojis_list
    }

if _name_ == "_main_":
    # Example usage
    post_text = "Just had an bad day at the beach! 🏖️ #SummerVibes"
    analysis_result = analyze_social_media_post(post_text)

    print("Sentiment:", analysis_result["Sentiment"])
    print("Keywords:", analysis_result["Keywords"])
    print("Emojis:", analysis_result["Emojis"])
#4def calculate_ticket_price(age, day, is_group):

    adult_price = 12
    child_price = 8
    senior_price = 10

    if is_group:
        adult_price *= 0.9
        child_price *= 0.8
        senior_price *= 0.85

    if age >= 18:
        ticket_price = adult_price
    elif 13 <= age <= 17:
        ticket_price = child_price
    else:
        ticket_price = senior_price

    if day in ['saturday', 'sunday']:
        ticket_price *= 0.2 
    return ticket_price

age = int(input("Enter age: "))
day_of_week = input("Enter day of the week: ")

is_group = input("Are you part of a group? (yes/no) ") == 'yes'

ticket_price = calculate_ticket_price(age, day_of_week, is_group)
print(f"Your ticket price is: ${ticket_price}")
